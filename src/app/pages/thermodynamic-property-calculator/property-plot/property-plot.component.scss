@use "@angular/material" as mat;
@use "src/themes/dark-theme.scss" as dark;
@use "src/themes/light-theme.scss" as light;

.container {
  margin: auto;
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  max-width: 600px;
  .legend-box {
    display: flex;
    flex-wrap: wrap;
    max-width: 80%;
    align-items: center;
    justify-content: center;
    row-gap: 1em;
    margin-top: 1em;
    .legend-entry {
      border: 1px solid
        mat.get-theme-color(dark.$dark-theme, foreground, divider);
      ::ng-deep .mdc-label {
        display: flex;
        align-items: center;
        gap: 1ch;
        svg {
          margin: 1ch;
          line {
            fill: none;
            stroke: mat.get-theme-color(dark.$dark-theme, foreground, text);
            stroke-opacity: 0.6;
            stroke-width: 1;
          }
        }
      }
    }
  }
  .plot {
    aspect-ratio: 1;
    .contour-window {
      path {
        fill: none;
        stroke: mat.get-theme-color(dark.$dark-theme, foreground, text);
        stroke-opacity: 0.6;
        stroke-width: 1;
      }
    }
    .border {
      fill: white;
      stroke: mat.get-theme-color(dark.$dark-theme, foreground, text);
      stroke-opacity: 1;
      stroke-width: 2;
    }
  }
}

.Q {
  stroke-dasharray: 15, 9;
}

.T {
  stroke-dasharray: 3, 3;
}
.D {
  stroke-dasharray: 15, 6, 3, 6;
}
.U {
  stroke-dasharray: 15, 3, 3, 3, 3, 3;
}
// .S {
// }
.V {
  stroke-dasharray: 9, 3;
}
.P {
  stroke-dasharray: 3, 3;
}
// .H {
// }

@media (prefers-color-scheme: light) {
  .container {
    .legend-box {
      .legend-entry {
        border: 1px solid
          mat.get-theme-color(light.$light-theme, foreground, divider);
        ::ng-deep .mdc-label {
          svg {
            line {
              stroke: mat.get-theme-color(light.$light-theme, foreground, text);
            }
          }
        }
      }
    }
    .plot {
      .contour-window {
        path {
          stroke: mat.get-theme-color(light.$light-theme, foreground, text);
        }
      }
      .border {
        stroke: mat.get-theme-color(light.$light-theme, foreground, divider);
      }
    }
  }
}
